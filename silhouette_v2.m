function [si, h] = silhouette(X, clust, metric)% Nan Zhou% Code Matlab 'silhouette' into Octave function% Sichuan University, Macquarie University% zhnanx@gmail.com% input parameters% X, n-by-p data matrix% - Rows of X correspond to points, columns correspond to coordinates. % clust, clusters defined for X; n-by-1 vector% metric, e.g. Euclidean, sqEuclidean, cosine% return values% si, silhouettte values, n-by-1 vector% h, figure handle, waiting to be solved in the future% algorithm reference% - Peter J. Rousseeuw (1987)% - Silhouettes: a Graphical Aid to the Interpretation and Validation of Cluster Analysis% - doi:10.1016/0377-0427(87)90125-7  % check size  if (size(X, 1) != size(clust, 1))    error("First dimension of X <%d> doesn't match that of clust <%d>",...      size(X, 1), size(clust, 1));  endif    % check metric  if (! exist('metric', 'var'))    metric = 'sqEuclidean';  endif    %%%% function set, not used in this version  function [dist] = EuclideanDist(x, y)    dist = sqrt((x - y) * (x - y)');  endfunction    function [dist] = sqEuclideanDist(x, y)    dist = (x - y) * (x - y)';  endfunction    function [dist] = cosineDist(x, y)    cosineValue = dot(x,y)/(norm(x,2)*norm(y,2));    dist = 1 - cosineValue;  endfunction  %%% end function set    % calculating  si = zeros(size(X, 1), 1);  %h  % distance matrix showing the distance for any two rows of X  distMatrix = squareform(pdist(X, 'cosine'));    %calculate values of si one by one  for iii = 1:length(si)        %%% distance of iii to all others    iii2all = distMatrix(iii, :);        %%% allocate values to clusters    clusterIDs = unique(clust); % eg [1; 2; 3; 4]    groupedValues = {};    for jjj = 1:length(clusterIDs)      groupedValues{clusterIDs(jjj)} = [iii2all(clust == clusterIDs(jjj))];    endfor    %%% end allocation        %%% calculate a(i)    % dist of object iii to all other objects in the same cluster    a_iii = groupedValues{clust(iii)};    % average distance of iii to all other objects in the same cluster    if (length(a_iii) == 1)      si(iii) = 0;      continue;    else      a_i = sum(a_iii) / (length(a_iii) - 1);    endif    %disp(a_i);pause;    %%% end a(i)            %%% calculate b(i)    clusterIDs_new = clusterIDs;    % remove the cluster iii in    clusterIDs_new(find(clusterIDs_new == clust(iii))) = [];    % average distance of iii to all objects of another cluster    a_iii_2others = zeros(length(clusterIDs_new), 1);    for jjj = 1:length(clusterIDs_new)      values_another = groupedValues{clusterIDs_new(jjj)};      a_iii_2others(jjj) = mean(values_another);    endfor    b_i = min(a_iii_2others);    %disp(b_i);disp('---');pause;    %%% end b(i)            %%% calculate s(i)    si(iii) = (b_i - a_i) / max([a_i; b_i]);    %%% end s(i)      endfor  end%%%% reference datadistMatrix = [0 5.58 7 7.08 4.83 2.17 6.42 3.42 2.5 6.08 5.25 4.75;5.58 0 6.5 7 5.08 5.75 5 5.5 4.92 6.67 6.83 3;7 6.5 0 3.83 8.17 6.67 5.58 6.42 6.25 4.25 4.5 6.08;7.08 7 3.83 0 5.83 6.92 6 6.42 7.33 2.67 3.75 6.67;4.83 5.08 8.17 5.83 0 4.92 4.67 5 4.5 6 5.75 5;2.17 5.75 6.67 6.92 4.92 0 6.42 3.92 2.25 6.17 5.42 5.58;6.42 5 5.58 6 4.67 6.42 0 6.17 6.33 6.17 6.08 4.83;3.42 5.5 6.42 6.42 5 3.92 6.17 0 2.75 6.92 5.83 6.17;2.5 4.92 6.25 7.33 4.5 2.25 6.33 2.75 0 6.17 6.67 5.67;6.08 6.67 4.25 2.67 6 6.17 6.17 6.92 6.17 0 3.67 6.5;5.25 6.83 4.5 3.75 5.75 5.42 6.08 5.83 6.67 3.67 0 6.92;4.75 3 6.08 6.67 5 5.58 4.83 6.17 5.67 6.5 6.92 0];%% the silhouette for above matrix issi_benchmark =    [0.421493   0.254566   0.307269   0.478902   0.021186   0.439718   0.174990   0.365611   0.468085   0.436822   0.313047   0.279536];   %%%% end reference data